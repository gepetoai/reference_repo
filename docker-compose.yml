version: '3.8'

services:
  service_name:
    container_name: service_name
    build:
      context: ./
      dockerfile: Dockerfile
      args:
        - ENVIRONMENT=${ENVIRONMENT:-local}
    volumes:
      - ./:/app
    ports:
      - "8081:8081"
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_HOST=${POSTGRES_HOST:-postgres}  
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}  
      - POSTGRES_DB=${POSTGRES_DB:-gepeto}
      - REDIS_ENDPOINT=${REDIS_ENDPOINT:-gepeto_redis}
      - REDIS_HOST=${REDIS_HOST:-gepeto_redis}
      - REDIS_PORT=${REDIS_PORT:-6380}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-your_default_password}
      - ENVIRONMENT=${ENVIRONMENT:-local}
      - EXTRA_UVICORN_ARGS=--reload
    depends_on:
      - postgres
      - redis
    networks:
      - gepeto_network


  postgres:
    image: ankane/pgvector:v0.5.1
    container_name: gepeto_postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=gepeto
    ports:
      - "5436:5432"
    volumes:
      - postgres_data_v1:/var/lib/postgresql/data
    networks:
      - gepeto_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6
    container_name: gepeto_redis
    command: redis-server --requirepass your_default_password --port 6380
    environment:
      - REDIS_AUTH_TOKEN=your_default_password
      - REDIS_PORT=6380
    ports:
      - "6380:6380"
    volumes:
      - redis_data_v1:/data
    networks:
      - gepeto_network


volumes:
  postgres_data_v1:
  redis_data_v1:
networks:
  gepeto_network:
    driver: bridge